#include <iostream>

int getUserInput() {
    int x;
    std::cin >> x;

    if (std::cin.fail()) {
        std::cerr << "Invalid input! Exiting program.\n" << std::endl;
        std::cin.clear();
        exit(1);
    }
    return x;
}

enum operationType {
    ADDITION = 1,
    MULTIPLICATION,
    DIVISION,
};

struct InputNums {
    int firstNum;
    int secondNum;
};

struct DivisionResults {
    int quotient;
    int remainder;
};

InputNums getUserInputs() {
    InputNums input;
    input.firstNum = getUserInput();
    input.secondNum = getUserInput();
    return input;
}

// Function to perform integer division with remainder
DivisionResults divideTwoNums(int dividend, int divisor) {
    DivisionResults results;
    results.quotient = dividend / divisor;
    results.remainder = dividend % divisor;
    return results;
}

// Function to print division results with decimal expansion
void printDivResult(DivisionResults results, int dividend, int divisor) {
    std::cout << "The quotient of the two numbers is " << results.quotient;

    // If there is a remainder, compute decimal expansion
    if (results.remainder > 0) {
        std::cout << ".";  // Start decimal expansion
        int remainder = results.remainder;

        for (int i = 0; i < 5; i++) { // Compute up to 5 decimal places
            remainder *= 10;
            int decimalNum = remainder / divisor;
            std::cout << decimalNum;
            remainder %= divisor;

            if (remainder == 0) break; // Stop if remainder becomes 0
        }
    }
    std::cout << std::endl;
}

void printAddResult(int result) {
    std::cout << "The sum of the two numbers is " << result << ".\n";
}

void printMultResult(int result) {
    std::cout << "The product of the two numbers is " << result << ".\n";
}

int addTwoNums(int a, int b) {
    return a + b;
}

int multiplyTwoNums(int x, int y) {
    return x * y;
}

int main() {
    std::cout << "Select the Operation Type.\n";
    std::cout << "1. Addition\n";
    std::cout << "2. Multiplication\n";
    std::cout << "3. Division\n";
    std::cout << "Enter your choice: " << std::flush;

    int operationchoice = getUserInput();

    if (operationchoice < 1 || operationchoice > 3) {
        std::cerr << "Invalid input! Exiting program.\n";
        exit(1);
    }

    operationType operation = static_cast<operationType>(operationchoice);

    if (operation == ADDITION) {
        std::cout << "Enter two numbers to add: \n";
        InputNums inputs = getUserInputs();
        int result = addTwoNums(inputs.firstNum, inputs.secondNum);
        printAddResult(result);
    }
    if (operation == MULTIPLICATION) {
        std::cout << "Enter two numbers to multiply: \n";
        InputNums inputs = getUserInputs();
        int result = multiplyTwoNums(inputs.firstNum, inputs.secondNum);
        printMultResult(result);
    }
    if (operation == DIVISION) {
        std::cout << "Enter two numbers to divide: \n";
        InputNums inputs = getUserInputs();

        if (inputs.secondNum == 0) {
            std::cerr << "Invalid Input! Cannot divide by Zero.\n";
            exit(1);
        }
        DivisionResults results = divideTwoNums(inputs.firstNum, inputs.secondNum);
        printDivResult(results, inputs.firstNum, inputs.secondNum);
    }

    return 0;
}